---
interface Props {
  name: string;
  active?: true | undefined;
}

const { name, active } = Astro.props;

const classList = active
  ? "text-white bg-primary md:bg-transparent md:text-primary md:dark:bg-transparent"
  : "text-gray-900 hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-primary dark:text-white md:dark:hover:text-primary dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent";
---

<li class="relative">
  <button
    id={`dropdown${name}Link`}
    data-dropdown-toggle={`dropdown${name}`}
    class={`flex items-center justify-between w-full py-2 px-3  rounded md:p-0 md:w-auto ${classList}`}
    >{name}
    <svg
      class="w-2.5 h-2.5 ms-2.5"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 10 6"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="m1 1 4 4 4-4"></path>
    </svg>
  </button>
  <!-- Dropdown menu -->
  <div
    id={`dropdown${name}`}
    class="z-10 font-normal hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 dark:divide-gray-600 absolute top-[3.1rem] md:top-8 left-1/2 -translate-x-1/2"
  >
    <ul
      class="py-2 text-sm text-gray-700 dark:text-gray-400"
      aria-labelledby="dropdownLargeButton"
    >
      <slot />
    </ul>
  </div>
</li>
